using System;
using System.Collections.Generic;

namespace ConsoleApp1
{
    class Fish
    {
        private int _ageMax;

        public Fish(int healthMax)
        {
            _ageMax = healthMax;
        }

        public int Age { get; private set; }
        public bool IsAlive => Age > _ageMax;

        public void AddYearToLife()
        {
            if (IsAlive == false)
                Age++;
        }

        public void ShowInformation()
        {
            Console.WriteLine($"этой рыбке - {Age} лет.{TrackStatusAlive()}");
        }

        private string TrackStatusAlive()
        {
            if (IsAlive)
                return "мертва";
            else
                return "жива";
        }
    }

    class Aquarium
    {
        private List<Fish> _fishes = new List<Fish>();
        private int _countMax;

        public Aquarium(int countMax, int countFishStart, int healthMax, Random random)
        {
            _countMax = countMax;

            if (countFishStart > countMax)
            {
                countFishStart = 0;
                Console.WriteLine("теперь перекладывай в железную банку, умник");
            }

            for (int i = 0; i < countFishStart; i++)
            {
                _fishes.Add(new Fish(random.Next(healthMax)));
            }
        }

        public void GetFish(int index)
        {
            if (index < _fishes.Count && index >= 0)
            {
                _fishes.RemoveAt(index);
            }
        }

        public void Accept(Fish fish)
        {
            if (fish != null)
                if (_fishes.Count < _countMax)
                    _fishes.Add(fish);
                else
                    Console.WriteLine("этот аквариум заполнен");
        }

        public void ProcessLife(Owner owner)
        {
            int add = 1;
            int remove = 2;
            int exit = 3;
            int countSumbol = 25;
            char symbol = '-';
            bool isWorking = true;

            while (isWorking)
            {
                ShowInformation();
                Console.WriteLine(new string(symbol, countSumbol));

                foreach (Fish fish in _fishes)
                {
                    fish.AddYearToLife();
                }

                if (owner != null)
                {
                    int input = owner.Work();

                    if (input == add)
                        Accept(owner.AddNewFish());
                    else if (input == remove)
                        GetFish(owner.PullOut());
                    else if(input == exit)
                        isWorking = false;
                }

                Console.Clear();
            }
        }

        private void ShowInformation()
        {
            foreach (Fish fish in _fishes)
            {
                fish.ShowInformation();
            }
        }
    }

    class Owner
    {
        private Random _random = new Random();

        public Fish AddNewFish()
        {
            int healthMax = 10;
            return new Fish(_random.Next(healthMax));
        }

        public int PullOut()
        {
            Console.WriteLine("введите номер рыбки");
            return EnterCommand();
        }

        public int Work()
        {
            int addFish = 1;
            int pullOutFish = 2;
            int pass = 3;
            Console.WriteLine($"нажмите {addFish}, чтобы добавить рыбу;{pullOutFish}, чтобы убрать рыбу по индексу\nлюбую, чтобы продолжить ");
            int input = EnterCommand();

            if (input == addFish)
                return addFish;
            else if (input == pullOutFish)
                return pullOutFish;
            else
                return pass;
        }

        public int EnterCommand()
        {
            int emptiness = -1;
            string input = Console.ReadLine();

            if (int.TryParse(input, out int value))
            {
                return value;
            }

            return emptiness;
        }
    }

    class Program
    {
        static void Main()
        {
            Random random = new Random();
            Owner owner = new Owner();
            Aquarium aquarium = null;
            int lifeExpectancy = 15;

            Console.Write("введите максимальную вместительнось аквариума: ");
            int capacity = owner.EnterCommand();
            Console.Write("введите начальное кол-во рыб в аквариуме: ");
            int countStartFishes = owner.EnterCommand();

            if (capacity >= 0 && countStartFishes >= 0 && lifeExpectancy >= 0)
                aquarium = new Aquarium(capacity, countStartFishes, lifeExpectancy, random);

            if (aquarium != null)
                aquarium.ProcessLife(owner);
            else
                Console.WriteLine("Художественный фильм...");
        }
    }
}

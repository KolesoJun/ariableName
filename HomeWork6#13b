using System;
using System.Collections.Generic;

namespace ConsoleApp1
{
    class Program
    {
        static void Main()
        {
            AutoService autoService = new AutoService();
            autoService.Work();
        }
    }

    class Client
    {
        private Random _random = new Random();

        public Client()
        {
            int moneyRandomMin = 500;
            int moneyRandomMax = 2500;
            Money = _random.Next(moneyRandomMin, moneyRandomMax);
            Car = new Car();
        }

        public Car Car { get; private set; }
        public int Money { get; private set; }

        public bool CanPay(int price)
        {
            if (Money >= price)
            {
                Pay(price);
                return true;
            }

            return false;
        }

        public void TakeMulct(int price)
        {
            Money += price;
        }

        private void Pay(int price)
        {
            Money -= price;
        }
    }

    class Car
    {
        public Car()
        {
            DetailProblem = CreateRandomProblem();
        }

        public Detail DetailProblem { get; private set; }

        public bool IsEquals(Detail detail)
        {
            return detail.Name == DetailProblem.Name;
        }

        public void ShowInformation()
        {
            Console.WriteLine($"этой машине требуется {DetailProblem.Name}");
        }

        public void RefreshDetail(Detail detailFresh)
        {
            Console.WriteLine("проблема решена");
            DetailProblem = detailFresh;
            Console.ReadLine();
        }

        private Detail CreateRandomProblem()
        {
            Random random = new Random();
            Detail[] details =
            {
                new Oil(),
                new Filter(),
                new Grenade(),
                new Lamp()
            };
            return details[random.Next(details.Length)];
        }
    }

    class AutoService
    {
        private List<Detail> _details = new List<Detail>();
        private Random _random = new Random();
        private Queue<Client> _clients = new Queue<Client>();

        public AutoService()
        {
            int countDetail = 10;
            int countClients = 5;
            FillList(countDetail);
            CreateQueue(countClients);
        }

        public int Cash { get; private set; }

        public void Work()
        {
            char symbolMenu = '_';
            int countSymbolMenu = 25;

            while (CanContinueWork())
            {
                ShowInformation();
                Console.WriteLine(new string(symbolMenu, countSymbolMenu));
                Console.WriteLine("клиент с такой проблемой");
                Client clientProcessing = _clients.Dequeue();
                clientProcessing.Car.ShowInformation();
                Detail detailNeed;

                if (TryGetDetail(out detailNeed))
                {
                    int price = CalculatePrice(detailNeed);
                    Console.WriteLine($"цена ремонта - {price}");

                    if (clientProcessing.Car.IsEquals(detailNeed))
                    {
                        if (clientProcessing.CanPay(price))
                        {
                            _details.Remove(detailNeed);
                            clientProcessing.Car.RefreshDetail(detailNeed);
                            Cash += price;
                            Console.WriteLine($"вы заработали + {price}, Ваш баланс: {Cash}");
                        }
                        else
                        {
                            Console.WriteLine("иди заработай денег");
                        }
                    }
                    else
                    {
                        Console.WriteLine("вы чего наделали?!");
                        int mulct = 500;
                        Cash -= mulct;
                        clientProcessing.TakeMulct(mulct);
                    }
                }
                else
                {
                    Console.WriteLine("вы совершили ошибку. придется заплатить");
                    int mulct = 100;
                    Cash -= mulct;
                }

                Console.ReadLine();
                Console.Clear();
            }
        }

        private void ShowInformation()
        {
            foreach (Detail detail in _details)
            {
                detail.ShowInformation();
            }
        }

        private bool TryGetDetail(out Detail detail)
        {
            Console.WriteLine("введите номер детали в базе");
            string input = Console.ReadLine();

            if (int.TryParse(input, out int value))
            {
                if (value <= _details.Count)
                {
                    detail = _details[value];
                    return true;
                }
            }

            detail = null;
            return false;
        }

        private bool CanContinueWork()
        {
            if (_clients.Count > 0)
                return true;

            Console.WriteLine($"ваш счет - {Cash}");
            return false;
        }

        private int CalculatePrice(Detail detail)
        {
            int priceMin = 300;
            int priceMax = 1500;
            int priceJob = _random.Next(priceMin, priceMax);
            Console.WriteLine($"стоимость детали - {detail.Price}, стоимость работы - {priceJob}");
            return priceJob + detail.Price;
        }

        private void CreateQueue(int countClients)
        {
            for (int i = 0; i < countClients; i++)
            {
                _clients.Enqueue(new Client());
            }
        }

        private void FillList(int countRandom)
        {
            Detail[] details =
            {
                new Oil(),
                new Filter(),
                new Grenade(),
                new Lamp()
            };

            for (int i = 0; i < countRandom; i++)
            {
                _details.Add(details[_random.Next(details.Length)]);
            }
        }
    }

    class Detail
    {
        public string Name { get; protected set; }
        public int Price { get; protected set; }

        public void ShowInformation()
        {
            Console.WriteLine($"деталь - {Name}, цена - {Price}");
        }
    }

    class Oil : Detail
    {
        public Oil()
        {
            Name = "масло";
            Price = 350;
        }
    }

    class Filter : Detail
    {
        public Filter()
        {
            Name = "маслянный фильтр";
            Price = 270;
        }
    }

    class Grenade : Detail
    {
        public Grenade()
        {
            Name = "внутренний шрус";
            Price = 1500;
        }
    }

    class Lamp : Detail
    {
        public Lamp()
        {
            Name = "лампочка";
            Price = 50;
        }
    }
}

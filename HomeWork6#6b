using System;
using System.Collections.Generic;

namespace ConsoleApp1
{
    class Program
    {
        static void Main()
        {
            const string CommandBuy = "1";
            const string CommandShowAll = "2";
            const string CommandShowCart = "3";
            const string CommandExit = "4";

            Player player = new Player();
            Seller seller = new Seller();
            Shop shop = new Shop();
            bool isWorking = true;

            while (isWorking)
            {
                Console.WriteLine($"{CommandBuy} - купить;\n{CommandShowAll} - показать список товаров;\n{CommandShowCart} - посмотреть свои;\n{CommandExit} - выход");

                switch (Console.ReadLine())
                {
                    case CommandBuy:
                        shop.Trade(seller, player);
                        break;

                    case CommandShowAll:
                        seller.ShowAllProducts();
                        break;

                    case CommandShowCart:
                        player.ShowAllProducts();
                        break;

                    case CommandExit:
                        isWorking = false;
                        break;

                    default:
                        Console.WriteLine("ошибка ввода");
                        break;
                }

                Console.ReadLine();
                Console.Clear();
            }
        }
    }

    class Product
    {
        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }

        public string Name { get; private set; }
        public int Price { get; private set; }
    }

    class Human
    {
        protected List<Product> Products = new List<Product>();
        protected int Score;

        public int Money => Score;

        public virtual void ShowAllProducts()
        {
            foreach (Product product in Products)
            {
                Console.WriteLine($"{product.Name}");
            }
        }
    }

    class Seller: Human
    {
        public Seller()
        {
            Products.Add(new Product("макароны", 20));
            Products.Add(new Product("колбаса", 100));
            Products.Add(new Product("масло", 25));
            Products.Add(new Product("хлеб", 15));
            Products.Add(new Product("бананы", 30));
            Products.Add(new Product("сок", 47));
        }

        public override void ShowAllProducts()
        {
            foreach (Product product in Products)
            {
                Console.WriteLine($"{product.Name} {product.Price}");
            }

            Console.WriteLine($"счет продавца: {Score}");
        }

        public void GetProfit(int money)
        {
            if (money > 0)
            {
                Score += money;
            }
        }

        public Product TryGetProduct(string name)
        {
            Product product = null;
            
            for (int i = 0; i < Products.Count; i++)
            {
                if (Products[i].Name == name)
                {
                    product = Products[i];
                    Products.Remove(product);
                }
            }

            return product;
        }

        public void BackProduct(Product product)
        {
            Console.WriteLine("no money - no honey");
            Products.Add(product);
        }
    }

    class Player : Human
    {
        public Player()
        {
            Console.WriteLine("сколько денег на старте?");
            
            if (int.TryParse(Console.ReadLine(), out int value))
            {
                Score = value;
            }
            else
            {
                Console.WriteLine("довыпендривался");
                Score = 10;
            }
        }

        public override void ShowAllProducts()
        {
            base.ShowAllProducts();
            Console.Write($"счет: {Score}");
        }

        public void ByuProduct(Product product)
        {
            Products.Add(product);
            Score -= product.Price;
        }
    }

    class Shop
    {
        public void Trade(Seller seller, Player player)
        {
            Console.WriteLine("введите название продукта, который хотите купить:");
            string nameProduct = Console.ReadLine();
            Product product = seller.TryGetProduct(nameProduct);

            if (product!=null)
            {
                if (player.Money >= product.Price)
                {
                    player.ByuProduct(product);
                    seller.GetProfit(product.Price);
                    Console.WriteLine($"успешно. Продукт - {product.Name} - добавлен в корзину;{player.Money} - у вас осталось");
                }
                else
                {
                    seller.BackProduct(product);
                }
            }
            else
            {
                Console.WriteLine("ошибка ввода");
            }
        }
    }
}
